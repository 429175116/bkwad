<style lang="less">
.wrapper {
  position: fixed;
  top: 0rpx;
  width: 100%;
}

.header {
  min-height: 225rpx;
  padding: 1rem 0;
  text-align: center;
}
.header-title {
  display: block;
  padding: 0.4rem 0;
  font-size: 2rem;
}
.header-subtitle {
  color: #999;
}

/* 转盘 */
.canvas-container ul,
.canvas-container li {
  margin: 0;
  padding: 0;
  list-style: none;
}

.canvas-container {
  margin: 0 auto;
  position: relative;
  width: 300px;
  height: 300px;
  border-radius: 50%;
  /*border: 2px solid #E44025;*/
  box-shadow: 0 2px 3px #333, 0 0 2px #000;
}
.canvas-content {
  position: absolute;
  left: 0;
  top: 0;
  z-index: 1;
  display: block;
  width: 300px;
  height: 300px;
  border-radius: inherit;
  background-clip: padding-box;
  background-color: #ffcb3f;
}
.canvas-element {
  position: relative;
  z-index: 1;
  width: inherit;
  height: inherit;
  border-radius: 50%;
}
.canvas-list {
  position: absolute;
  left: 0;
  top: 0;
  width: inherit;
  height: inherit;
  z-index: 9999;
}
.canvas-item {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  color: #e4370e;
  font-weight: bold;
  text-shadow: 0 1px 1px rgba(255, 255, 255, 0.6);
}
.canvas-item-text {
  position: relative;
  display: block;
  padding-top: 20px;
  /* width: 50px; */
  margin: 0 auto;
  text-align: center;
  -webkit-transform-origin: 50% 150px;
  transform-origin: 50% 150px;
}

/* 分隔线 */
.canvas-line {
  position: absolute;
  left: 0;
  top: 0;
  width: inherit;
  height: inherit;
  z-index: 99;
}
.canvas-litem {
  position: absolute;
  left: 150px;
  top: 0;
  width: 1px;
  height: 150px;
  background-color: rgba(228, 55, 14, 0.4);
  overflow: hidden;
  -webkit-transform-origin: 50% 150px;
  transform-origin: 50% 150px;
}

.canvas-btn {
  position: absolute;
  left: 110px;
  top: 110px;
  z-index: 400;
  width: 80px;
  height: 80px;
  border-radius: 50%;
  color: #f4e9cc;
  background-color: #e44025;
  line-height: 80px;
  text-align: center;
  font-size: 20px;
  text-shadow: 0 -1px 1px rgba(0, 0, 0, 0.6);
  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.6);
  text-decoration: none;
}
.canvas-btn::after {
  position: absolute;
  display: block;
  content: ' ';
  left: 10px;
  top: -46px;
  width: 0;
  height: 0;
  overflow: hidden;
  border-width: 30px;
  border-style: solid;
  border-color: transparent;
  border-bottom-color: #e44025;
}
.canvas-btn.disabled {
  pointer-events: none;
  background: #b07a7b;
  color: #ccc;
}
.canvas-btn.disabled::after {
  border-bottom-color: #b07a7b;
}

.gb-run {
  -webkit-transition: all 6s ease;
  transition: all 6s ease;
}

/* 查看中奖 */
.main-container {
  margin: 1rem 2rem;
}

.main-container-rule {
  padding: 1rem 0;
}
.main-rule-title {
  display: block;
  padding: 4px 0;
  font-size: 16px;
  font-weight: bold;
}
.main-rule-item {
  display: block;
  padding: 2px 0;
}
.activity{
  position: absolute;
  z-index: -10;
}
</style>
<template>
  <view class="wrapper">
    <image src="{{guangGao.ad}}"  style="width:{{autoW}}px;height:{{autoH}}px" bindload='autoImage' class="activity" />
    <view class="header">
      <text class="header-title">     </text>
      <text class="header-subtitle">    </text>
    </view>
    <view class="main">
      <view class="canvas-container">
        <view animation="{{animationData}}" class="canvas-content">
          <canvas style="width: 300px; height: 300px;" class="canvas-element" canvas-id="lotteryCanvas"></canvas>

          <view class="canvas-line">
            <repeat for="{{awardsList}}" key="index" index="index" item="item">
              <view class="canvas-litem" style="-webkit-transform: rotate({{item.lineTurn}});transform: rotate({{item.lineTurn}})">{{item.lineTurn}}</view>
            </repeat>
          </view>

          <view class="canvas-list">
            <repeat for="{{awardsList}}" key="index" index="index" item="item" class="canvas-item">
              <view class="canvas-item">
                <view class="canvas-item-text" style="-webkit-transform: rotate({{item.turn}});transform: rotate({{item.turn}})">{{item.award}}</view>
              </view>
            </repeat>
          </view>
        </view>
        <view @tap="clickLottery" class="canvas-btn {{btnDisabled}}">抽奖</view>
      </view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'

export default class Turntable extends wepy.page {
  config = {
    'navigationBarTitleText': '抽奖'
  };
  data = {
    awardsList: [],
    animationData: {},
    btnDisabled: '',
    runDegs: 0,
    // 转盘数据
    awardsConfig: {
      chance: true,
      // 转盘选项
      awards: null
    },
    guangGao: null,
    autoW: null,
    autoH: null,
    lottery: null,
    message: '',
    lotterySta: 0,
    time: ''
  }

  clickLottery() {
    // 生成结果 0到6的随机数{后面通过传至或者在此处请求转盘结果控制}
    // var awardIndex = (Math.random() * 6) >>> 0
    if (this.lotterySta === 206 || this.lotterySta === 400) {
      wx.showModal({
        title: '',
        content: `${this.time}后再来抽奖`,
        showCancel: false
      })
      // 两秒后返回上一页
      setTimeout(e => {
        wx.navigateBack({ changed: true })
      }, 5000)
      return
    }
    // 装盘结果
    var awardIndex = this.lottery
    if (awardIndex == null) {
      return
    }
    // 获取奖品配置
    var awardsConfig = this.awardsConfig
    var runNum = 8
    // awardIndex未转盘结果ID
    if (awardIndex < 2) awardsConfig.chance = false
    // 旋转抽奖  runDegs：旋转角度
    this.runDegs = this.runDegs || 0
    // runDegs：旋转角度
    this.runDegs = this.runDegs + (360 - this.runDegs % 360) + (360 * runNum - awardIndex * (360 / 6))
    var animationRun = wx.createAnimation({
      duration: 4000,
      timingFunction: 'ease'
    })
    this.animationRun = animationRun
    animationRun.rotate(this.runDegs).step()
    this.animationData = animationRun.export()
    this.btnDisabled = 'disabled'

    // 记录奖品
    var winAwards = wx.getStorageSync('winAwards') || {
      data: []
    }
    winAwards.data.push(awardsConfig.awards[awardIndex].name + '1个')
    wx.setStorageSync('winAwards', winAwards)

    // 中奖提示
    setTimeout(function() {
      wx.showModal({
        title: '恭喜',
        content: '获得' + awardsConfig.awards[awardIndex].name + '请到个人中心查看',
        showCancel: false
      })
      if (awardsConfig.chance) {
        this.btnDisabled = ''
      }
    }, 4000)
  }
  onRun(e) {
    var awardsConfig = this.data.awardsConfig
    var len = awardsConfig.awards.length
    var rotateDeg = 360 / len / 2 + 90
    var html = []
    // 文字旋转 turn 值
    var turnNum = 1 / len
    this.btnDisabled = awardsConfig.chance ? '' : 'disabled'
    var ctx = wepy.createContext()

    for (var i = 0; i < len; i++) {
      // 保存当前状态
      ctx.save()
      // 开始一条新路径
      ctx.beginPath()
      // 位移到圆心，下面需要围绕圆心旋转
      ctx.translate(150, 150)
      // 从(0, 0)坐标开始定义一条新的子路径
      ctx.moveTo(0, 0)
      // 旋转弧度,需将角度转换为弧度,使用 degrees * Math.PI/180 公式进行计算。
      ctx.rotate((360 / len * i - rotateDeg) * Math.PI / 180)
      // 绘制圆弧
      ctx.arc(0, 0, 150, 0, 2 * Math.PI / len, false)

      // 颜色间隔
      if (i % 2 === 0) {
        ctx.setFillStyle('rgba(255,184,32,.1)')
      } else {
        ctx.setFillStyle('rgba(255,203,63,.1)')
      }

      // 填充扇形
      ctx.fill()
      // 绘制边框
      ctx.setLineWidth(0.5)
      ctx.setStrokeStyle('rgba(228,55,14,.1)')
      ctx.stroke()

      // 恢复前一个状态
      ctx.restore()
      // 奖项列表
      html.push({
        turn: i * turnNum + 'turn',
        lineTurn: i * turnNum + turnNum / 2 + 'turn',
        award: awardsConfig.awards[i].name
      })
    }
    // 将获取到装盘的数据存入Data
    this.awardsList = html
  }
  methods = {}
  async onLoad() {
    this.guangGao = this.$parent.globalData.guangGao
    this.awardsConfig.awards = this.$parent.globalData.awards
    this.$apply()
    this.onRun()
    await wepy.login().then(res => {
      this.code = res.code
    })
    // 发送请求,发布活动
    await wx.request({
      url: `${this.$parent.globalData.requestUrl}/lottery/store`,
      method: 'POST',
      data: {
        code: this.code,
        uuid: this.$parent.globalData.uuid
      },
      success: data => {
        if (data.data.status_code === 200) {
          // 获取中奖信息
          this.lottery = data.data.data.lottery
        } else if (data.data.status_code === 206) {
          // 请明天再来
          this.lotterySta = data.data.status_code
          this.message = data.data.message
          let time = data.data.data
          time = this.formatSeconds(time[0])
          this.time = time
          this.$apply()
        } else if (data.data.status_code === 400) {
          // 请勿重复抽奖
          this.lotterySta = data.data.status_code
          this.message = data.data.message
        }
      }
    })
  }
  autoImage(e) {
    // 获取图片的狂傲
    var imgW = e.detail.width
    var imgH = e.detail.height
    // 计算图片比例
    var imgScale = imgW / imgH
    // 声明自适应宽高变量
    var autoW = ''
    var autoH = ''
    // 获取屏幕宽度，并将图片设置为屏幕等宽
    wx.getSystemInfo({
      success: res => {
        autoW = res.windowWidth
        autoH = autoW / imgScale
        this.autoW = autoW
        this.autoH = autoH
        this.$apply()
      }
    })
  }
  formatSeconds(value) {
    // 秒
    var theTime = parseInt(value)
    // 分
    var theTime1 = 0
    // 小时
    var theTime2 = 0
    if (theTime > 60) {
      theTime1 = parseInt(theTime / 60)
      theTime = parseInt(theTime % 60)
      if (theTime1 > 60) {
        theTime2 = parseInt(theTime1 / 60)
        theTime1 = parseInt(theTime1 % 60)
      }
    }
    var result = `${parseInt(theTime)}秒`
    if (theTime1 > 0) {
      result = `${parseInt(theTime1)}分${result}`
    }
    if (theTime2 > 0) {
      result = `${parseInt(theTime2)}小时${result}`
    }
    return result
  }
}
</script>
